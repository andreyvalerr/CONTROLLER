#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –∫–æ–Ω—Ç—Ä–æ–ª—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã —Å GUI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –∏ API —Å–µ—Ä–≤–µ—Ä–æ–º
"""

import signal
import sys
import threading
import time
from valve_control.valve_controller import ValveController
from core.api_server import api_server
from core.shared_state import system_state

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ GUI
GUI_ENABLED = True
try:
    from gui_interface.main_gui import TemperatureControllerGUI
except ImportError:
    GUI_ENABLED = False
    print("‚ö†Ô∏è GUI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç Kivy)")

class SystemManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã"""
    
    def __init__(self):
        self.valve_controller = None
        self.gui_app = None
        self.running = False
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤
        signal.signal(signal.SIGINT, self._signal_handler)
        signal.signal(signal.SIGTERM, self._signal_handler)
    
    def _signal_handler(self, sig, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"""
        print(f"\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {sig}...")
        self.stop()
        sys.exit(0)
    
    def _valve_controller_worker(self):
        """–†–∞–±–æ—á–∏–π –ø–æ—Ç–æ–∫ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∫–ª–∞–ø–∞–Ω–æ–≤"""
        try:
            # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
            self.valve_controller = ValveController()
            
            # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –æ–±—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é —Å–∏—Å—Ç–µ–º—ã
            self._setup_valve_controller_integration()
            
            if self.valve_controller.start():
                print("‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –∫–ª–∞–ø–∞–Ω–æ–≤ –∑–∞–ø—É—â–µ–Ω")
                self.valve_controller.run_forever()
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∫–ª–∞–ø–∞–Ω–æ–≤")
                system_state.set_error("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∫–ª–∞–ø–∞–Ω–æ–≤")
                
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∫–ª–∞–ø–∞–Ω–æ–≤: {e}")
            system_state.set_error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    def _setup_valve_controller_integration(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∫–ª–∞–ø–∞–Ω–æ–≤ —Å –æ–±—â–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º"""
        if not self.valve_controller:
            return
        
        # –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ GUI/API
        def on_settings_update(system_data):
            try:
                settings = system_data.settings
                # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ –∫–ª–∞–ø–∞–Ω–æ–≤
                if hasattr(self.valve_controller, 'temperature_regulator'):
                    regulator = self.valve_controller.temperature_regulator
                    regulator.config.max_temperature = settings.max_temperature
                    regulator.config.min_temperature = settings.min_temperature
                    regulator.config.hysteresis = settings.hysteresis
                    print(f"üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã: {settings.max_temperature}¬∞C")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞: {e}")
        
        system_state.subscribe(on_settings_update)
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ shared_state –∏–∑ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
        def update_system_state():
            while self.running:
                try:
                    if hasattr(self.valve_controller, 'current_temperature'):
                        temp = getattr(self.valve_controller, 'current_temperature', 0.0)
                        system_state.update_temperature(temp, "whatsminer")
                    
                    if hasattr(self.valve_controller, 'relay_controller'):
                        valve_state = getattr(self.valve_controller.relay_controller, 'is_on', False)
                        system_state.update_valve_state(valve_state)
                        
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è: {e}")
                
                time.sleep(1.0)
        
        update_thread = threading.Thread(target=update_system_state, daemon=True)
        update_thread.start()
    
    def start(self):
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã"""
        print("üöÄ –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´ –ö–û–ù–¢–†–û–õ–Ø –¢–ï–ú–ü–ï–†–ê–¢–£–†–´")
        print("=" * 50)
        
        self.running = True
        
        # 1. –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞
        print("üåê –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞...")
        if api_server.start():
            print("‚úÖ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5000")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞")
            return False
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        # api_server.set_remote_server("https://your-remote-server.com", 30)
        
        # 2. –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∫–ª–∞–ø–∞–Ω–æ–≤ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        print("üîß –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∫–ª–∞–ø–∞–Ω–æ–≤...")
        controller_thread = threading.Thread(
            target=self._valve_controller_worker,
            daemon=True
        )
        controller_thread.start()
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        time.sleep(2)
        
        # 3. –ó–∞–ø—É—Å–∫ GUI (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
        if GUI_ENABLED:
            print("üñ•Ô∏è –ó–∞–ø—É—Å–∫ GUI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
            try:
                self.gui_app = TemperatureControllerGUI()
                
                # –ò–º–∏—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
                self._setup_demo_data()
                
                print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø—É—â–µ–Ω–∞!")
                print("üìä GUI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞–∫—Ç–∏–≤–µ–Ω")
                print("üåê API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:5000/api/status")
                print("\n–ó–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–æ GUI –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã")
                
                # –ó–∞–ø—É—Å–∫ GUI –≤ –≥–ª–∞–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
                self.gui_app.run()
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ GUI: {e}")
                return False
        else:
            print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞ –±–µ–∑ GUI")
            print("üåê API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:5000/api/status")
            print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
            
            # –ü—Ä–æ—Å—Ç–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –≤ —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è GUI
            try:
                while self.running:
                    time.sleep(1)
            except KeyboardInterrupt:
                pass
        
        return True
    
    def _setup_demo_data(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        # –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
        def demo_temperature_update():
            import random
            while self.running:
                # –°–∏–º—É–ª—è—Ü–∏—è –∫–æ–ª–µ–±–∞–Ω–∏–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
                base_temp = 51.5
                current_temp = base_temp + random.uniform(-1.0, 2.0)
                system_state.update_temperature(current_temp, "demo")
                time.sleep(2)
        
        demo_thread = threading.Thread(target=demo_temperature_update, daemon=True)
        demo_thread.start()
    
    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã"""
        print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
        self.running = False
        
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞
        api_server.stop()
        
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∫–ª–∞–ø–∞–Ω–æ–≤
        if self.valve_controller:
            self.valve_controller.stop()
        
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ GUI
        if self.gui_app:
            self.gui_app.stop()
        
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    try:
        manager = SystemManager()
        
        if manager.start():
            print("üëã –°–∏—Å—Ç–µ–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
            return 0
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã")
            return 1
            
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return 1

if __name__ == "__main__":
    sys.exit(main()) 