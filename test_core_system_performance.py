#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ core_system –±–µ–∑ GUI
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∫ —á–∞—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
"""

import os
import sys
import time
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
current_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.append(current_dir)
sys.path.append(os.path.join(current_dir, 'data_manager'))

from data_manager.core_system import (
    start_core_system,
    get_core_instance,
    is_core_system_running,
    get_temperature_data,
    get_system_status
)

def test_temperature_updates():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã"""
    print("üîß –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ core_system...")
    print("=" * 60)
    
    # –ó–∞–ø—É—Å–∫ core_system
    if not is_core_system_running():
        print("üì° –ó–∞–ø—É—Å–∫–∞—é core_system...")
        success = start_core_system(
            temperature_ip="192.168.0.127", 
            temperature_update_interval=1.0
        )
        if not success:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å core_system")
            return
        
        # –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        print("‚è≥ –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã...")
        time.sleep(3)
    
    print("‚úÖ Core system –∑–∞–ø—É—â–µ–Ω")
    print()
    
    # –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä core system
    core = get_core_instance()
    if not core:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä core system")
        return
    
    print("üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã (–Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏):")
    print("–í—Ä–µ–º—è          | –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ | –°—Ç–∞—Ç—É—Å   | –ò–Ω—Ç–µ—Ä–≤–∞–ª")
    print("-" * 55)
    
    last_temp = None
    last_update_time = None
    update_count = 0
    
    try:
        while True:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            current_temp_direct = get_temperature_data()  # –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤
            system_data = core.get_system_data()          # –ß–µ—Ä–µ–∑ core instance
            current_temp_core = system_data.temperature
            
            current_time = datetime.now()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–∏–ª–∞—Å—å –ª–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
            if current_temp_direct != last_temp and current_temp_direct is not None:
                update_count += 1
                
                # –í—ã—á–∏—Å–ª—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏
                interval_str = "---"
                if last_update_time:
                    interval = (current_time - last_update_time).total_seconds()
                    interval_str = f"{interval:.1f}s"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–∞—é—Ç –ª–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
                data_match = "‚úÖ" if current_temp_direct == current_temp_core else "‚ùå"
                
                print(f"{current_time.strftime('%H:%M:%S.%f')[:-3]} | "
                      f"{current_temp_direct:>6.1f}¬∞C    | "
                      f"{system_data.system_status:>8} | "
                      f"{interval_str:>8} {data_match}")
                
                last_temp = current_temp_direct
                last_update_time = current_time
            
            time.sleep(0.1)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 100ms
            
    except KeyboardInterrupt:
        print("\n" + "=" * 60)
        print("üõë –¢–µ—Å—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print(f"\nüìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞:")
        print(f"   –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {update_count}")
        
        if update_count > 1 and last_update_time:
            test_duration = (last_update_time - 
                           (last_update_time - (current_time - last_update_time) * (update_count - 1))
                          ).total_seconds()
            avg_interval = test_duration / (update_count - 1) if update_count > 1 else 0
            print(f"   –°—Ä–µ–¥–Ω–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {avg_interval:.2f} —Å–µ–∫—É–Ω–¥")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ core system
        core_stats = core.get_statistics()
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ core system:")
        for key, value in core_stats.items():
            print(f"   {key}: {value}")

def test_data_manager_direct():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ data_manager"""
    print("\nüîç –¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ data_manager...")
    
    core = get_core_instance()
    if not core:
        print("‚ùå Core system –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return
    
    from data_manager.data_manager import DataType
    
    print("–í—Ä–µ–º—è          | –ó–Ω–∞—á–µ–Ω–∏–µ | –ò—Å—Ç–æ—á–Ω–∏–∫     | Metadata")
    print("-" * 60)
    
    last_entry = None
    
    try:
        for i in range(20):  # 20 –ø—Ä–æ–≤–µ—Ä–æ–∫ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º 0.5 —Å–µ–∫
            entry = core.data_manager.get_data(DataType.TEMPERATURE)
            
            if entry and (not last_entry or entry.timestamp != last_entry.timestamp):
                print(f"{entry.timestamp.strftime('%H:%M:%S.%f')[:-3]} | "
                      f"{entry.value:>6.1f}¬∞C | "
                      f"{entry.source:>11} | "
                      f"{entry.metadata}")
                last_entry = entry
            
            time.sleep(0.5)
            
    except KeyboardInterrupt:
        print("–¢–µ—Å—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    print("üöÄ –¢–ï–°–¢ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò –°–ò–°–¢–ï–ú–´ (–ë–ï–ó GUI)")
    print("=" * 60)
    
    try:
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
        test_temperature_updates()
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç data_manager
        test_data_manager_direct()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main() 