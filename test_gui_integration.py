#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è GUI —Å valve_control
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã –ø–µ—Ä–µ–¥–∞—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
"""

import time
import sys
import os
import threading
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏
current_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.append(current_dir)

def test_gui_valve_interaction():
    """–¢–µ—Å—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è GUI —Å valve control"""
    
    print("üîç –¢–ï–°–¢ –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–Ø GUI ‚Üî VALVE CONTROL")
    print("=" * 60)
    
    try:
        # –ò–º–ø–æ—Ä—Ç—ã
        from data_manager.core_system import (
            start_core_system, 
            set_temperature_settings, 
            get_temperature_settings,
            stop_core_system,
            is_core_system_running
        )
        from valve_control.data_manager_integration import (
            start_temperature_data_provider,
            get_temperature_for_valve_controller
        )
        from valve_control.valve_controller import ValveController, ValveControllerConfig
        from valve_control.config import load_config_from_env
        
        # 1. –ó–∞–ø—É—Å–∫ data_manager
        print("1Ô∏è‚É£ –ó–∞–ø—É—Å–∫ data_manager...")
        if not start_core_system(temperature_ip="192.168.0.127", temperature_update_interval=1.0):
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å data_manager")
            return False
        print("‚úÖ Data manager –∑–∞–ø—É—â–µ–Ω")
        time.sleep(2)
        
        # 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
        print("2Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
        if not set_temperature_settings(max_temp=55.0, min_temp=45.0, source_module="test_initial"):
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
            return False
        
        settings = get_temperature_settings()
        print(f"‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {settings['min_temperature']:.1f}¬∞C - {settings['max_temperature']:.1f}¬∞C")
        
        # 3. –ó–∞–ø—É—Å–∫ valve —Å–∏—Å—Ç–µ–º—ã
        print("3Ô∏è‚É£ –ó–∞–ø—É—Å–∫ valve control...")
        if not start_temperature_data_provider(update_interval=1.0):
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å valve provider")
            return False
        
        relay_config, temp_config, monitoring_config, safety_config = load_config_from_env()
        config = ValveControllerConfig(
            relay_config=relay_config,
            temperature_config=temp_config,
            monitoring_config=monitoring_config,
            safety_config=safety_config
        )
        
        valve_controller = ValveController(
            temperature_callback=get_temperature_for_valve_controller,
            config=config
        )
        
        if not valve_controller.sync_temperature_settings_with_data_manager():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
            return False
        
        # –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
        controller_running = threading.Event()
        
        def run_controller():
            try:
                if valve_controller.start():
                    controller_running.set()
                    valve_controller.run_forever()
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ: {e}")
        
        controller_thread = threading.Thread(target=run_controller, daemon=True)
        controller_thread.start()
        
        if not controller_running.wait(timeout=5):
            print("‚ùå –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è")
            return False
        
        print("‚úÖ Valve control –∑–∞–ø—É—â–µ–Ω")
        
        # 4. –°–∏–º—É–ª—è—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —á–µ—Ä–µ–∑ GUI
        print("4Ô∏è‚É£ –°–∏–º—É–ª—è—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–µ—Ä–µ–∑ GUI...")
        print("=" * 60)
        
        test_cases = [
            {"max_temp": 47.0, "min_temp": 45.0, "source": "gui_test_1"},
            {"max_temp": 46.5, "min_temp": 44.5, "source": "gui_test_2"},
            {"max_temp": 48.5, "min_temp": 46.5, "source": "gui_test_3"},
        ]
        
        for i, test_case in enumerate(test_cases, 1):
            print(f"\nüîÑ –¢–ï–°–¢ {i}: –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–∞ {test_case['min_temp']:.1f}¬∞C - {test_case['max_temp']:.1f}¬∞C")
            
            # –ò–∑–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (—Å–∏–º—É–ª—è—Ü–∏—è GUI)
            success = set_temperature_settings(
                max_temp=test_case['max_temp'],
                min_temp=test_case['min_temp'],
                source_module=test_case['source']
            )
            
            if not success:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∞ {i}")
                continue
            
            print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–º–µ–Ω–µ–Ω—ã —á–µ—Ä–µ–∑ GUI-—Å–∏–º—É–ª—è—Ü–∏—é")
            
            # –ñ–¥–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫ —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç
            for check_round in range(10):  # 10 —Å–µ–∫—É–Ω–¥ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
                time.sleep(1)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ data_manager –≤–∏–¥–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è
                current_settings = get_temperature_settings()
                if current_settings:
                    dm_min = current_settings['min_temperature']
                    dm_max = current_settings['max_temperature']
                else:
                    print("‚ùå Data manager –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
                    continue
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ valve_controller –≤–∏–¥–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è
                valve_status = valve_controller.get_status()
                vc_min = valve_status.get('min_temperature', 0.0)
                vc_max = valve_status.get('max_temperature', 0.0)
                
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É
                temp = get_temperature_for_valve_controller()
                cooling_active = valve_controller.is_cooling_active()
                
                # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
                if check_round % 3 == 0:
                    print(f"   üïê +{check_round+1}—Å:")
                    print(f"     üìä Data Manager: {dm_min:.1f}¬∞C - {dm_max:.1f}¬∞C")
                    print(f"     üîß Valve Control: {vc_min:.1f}¬∞C - {vc_max:.1f}¬∞C")
                    print(f"     üå°Ô∏è  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp:.1f}¬∞C, –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ={'–í–ö–õ' if cooling_active else '–í–´–ö–õ'}")
                    
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
                    if abs(dm_min - vc_min) > 0.01 or abs(dm_max - vc_max) > 0.01:
                        print(f"     üö® –†–ê–°–°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø: DM({dm_min:.1f}-{dm_max:.1f}) ‚â† VC({vc_min:.1f}-{vc_max:.1f})")
                    else:
                        print(f"     ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
                    
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è
                    if temp >= vc_max and not cooling_active:
                        print(f"     üö® –ü–†–û–ë–õ–ï–ú–ê: T‚â•max, –Ω–æ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ –í–´–ö–õ")
                    elif temp <= vc_min and cooling_active:
                        print(f"     üö® –ü–†–û–ë–õ–ï–ú–ê: T‚â§min, –Ω–æ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ –í–ö–õ")
                    else:
                        print(f"     ‚úÖ –õ–æ–≥–∏–∫–∞ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        
        print("\n5Ô∏è‚É£ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏...")
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 —Å–µ–∫—É–Ω–¥
        for final_check in range(15):
            temp = get_temperature_for_valve_controller()
            settings = get_temperature_settings()
            cooling_active = valve_controller.is_cooling_active()
            
            if settings and temp is not None:
                min_temp = settings['min_temperature']
                max_temp = settings['max_temperature']
                
                if final_check % 5 == 0:
                    status_icon = "üî•" if cooling_active else "‚ùÑÔ∏è"
                    print(f"   {status_icon} T={temp:.1f}¬∞C, –ø–æ—Ä–æ–≥–∏=[{min_temp:.1f}-{max_temp:.1f}¬∞C], "
                          f"–æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ={'–í–ö–õ' if cooling_active else '–í–´–ö–õ'}")
                    
                    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
                    if not cooling_active and temp >= max_temp:
                        print(f"   üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ù–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è –ø—Ä–∏ T‚â•{max_temp:.1f}¬∞C!")
            
            time.sleep(1)
        
        print("\n6Ô∏è‚É£ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
        valve_controller.stop()
        stop_core_system()
        print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    try:
        success = test_gui_valve_interaction()
        if success:
            print("\n‚úÖ –¢–µ—Å—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è GUI-Valve –∑–∞–≤–µ—Ä—à–µ–Ω")
        else:
            print("\n‚ùå –¢–µ—Å—Ç –≤—ã—è–≤–∏–ª –ø—Ä–æ–±–ª–µ–º—ã")
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è –¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}") 