#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ GUI –∏ API —Å–∏—Å—Ç–µ–º—ã
"""

import time
import threading
import requests
import json
from core.shared_state import system_state
from core.api_server import api_server

def test_shared_state():
    """–¢–µ—Å—Ç –æ–±—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã"""
    print("üß™ –¢–µ—Å—Ç SharedState...")
    
    # –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
    system_state.update_temperature(51.5, "test")
    temp_data = system_state.get_temperature_data()
    assert temp_data.current_temp == 51.5
    print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–ª–µ–≤–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
    success = system_state.update_target_temperature(53.0)
    assert success == True
    settings = system_state.get_settings()
    assert settings.max_temperature == 53.0
    print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–ª–∞–ø–∞–Ω–∞
    system_state.update_valve_state(True)
    status = system_state.get_system_status()
    assert status.valve_state == True
    print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–ª–∞–ø–∞–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã SharedState –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ\n")

def test_api_server():
    """–¢–µ—Å—Ç API —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üß™ –¢–µ—Å—Ç API —Å–µ—Ä–≤–µ—Ä–∞...")
    
    # –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞
    if not api_server.start():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å API —Å–µ—Ä–≤–µ—Ä")
        return False
    
    # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
    time.sleep(2)
    
    try:
        # –¢–µ—Å—Ç health check
        response = requests.get("http://localhost:5000/api/health")
        assert response.status_code == 200
        print("‚úÖ Health check —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
        response = requests.get("http://localhost:5000/api/status")
        assert response.status_code == 200
        data = response.json()
        assert "data" in data
        print("‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        # –¢–µ—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
        response = requests.post(
            "http://localhost:5000/api/temperature/target",
            json={"target_temp": 54.0}
        )
        assert response.status_code == 200
        print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã —á–µ—Ä–µ–∑ API —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å
        response = requests.get("http://localhost:5000/api/status")
        data = response.json()
        temp = data["data"]["settings"]["max_temperature"]
        assert temp == 54.0
        print("‚úÖ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã API —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ\n")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API: {e}")
        return False
    finally:
        api_server.stop()

def test_gui_import():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ GUI –º–æ–¥—É–ª–µ–π"""
    print("üß™ –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ GUI...")
    
    try:
        from gui_interface.main_gui import TemperatureControllerGUI
        print("‚úÖ GUI –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–±–µ–∑ –∑–∞–ø—É—Å–∫–∞)
        app = TemperatureControllerGUI()
        print("‚úÖ GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã GUI –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ\n")
        return True
        
    except ImportError as e:
        print(f"‚ö†Ô∏è GUI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        print("   –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω Kivy")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ GUI: {e}")
        return False

def test_data_models():
    """–¢–µ—Å—Ç –º–æ–¥–µ–ª–µ–π –¥–∞–Ω–Ω—ã—Ö"""
    print("üß™ –¢–µ—Å—Ç –º–æ–¥–µ–ª–µ–π –¥–∞–Ω–Ω—ã—Ö...")
    
    from core.data_models import SystemSettings, TemperatureData, SystemStatus, SystemData
    from datetime import datetime
    
    # –¢–µ—Å—Ç SystemSettings
    settings = SystemSettings(max_temperature=55.0, min_temperature=54.9)
    assert settings.validate() == True
    print("‚úÖ SystemSettings —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –¢–µ—Å—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    settings_dict = settings.to_dict()
    settings_restored = SystemSettings.from_dict(settings_dict)
    assert settings_restored.max_temperature == settings.max_temperature
    print("‚úÖ –°–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –¢–µ—Å—Ç TemperatureData
    temp_data = TemperatureData(
        current_temp=52.1,
        target_temp=52.0,
        min_temp=51.9,
        timestamp=datetime.now()
    )
    temp_dict = temp_data.to_dict()
    temp_restored = TemperatureData.from_dict(temp_dict)
    assert temp_restored.current_temp == temp_data.current_temp
    print("‚úÖ TemperatureData —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –º–æ–¥–µ–ª–µ–π –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ\n")

def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í –°–ò–°–¢–ï–ú–´ GUI –ò API")
    print("=" * 50)
    
    all_passed = True
    
    # –¢–µ—Å—Ç –º–æ–¥–µ–ª–µ–π –¥–∞–Ω–Ω—ã—Ö
    try:
        test_data_models()
    except Exception as e:
        print(f"‚ùå –¢–µ—Å—Ç –º–æ–¥–µ–ª–µ–π –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≤–∞–ª–µ–Ω: {e}")
        all_passed = False
    
    # –¢–µ—Å—Ç SharedState
    try:
        test_shared_state()
    except Exception as e:
        print(f"‚ùå –¢–µ—Å—Ç SharedState –ø—Ä–æ–≤–∞–ª–µ–Ω: {e}")
        all_passed = False
    
    # –¢–µ—Å—Ç API —Å–µ—Ä–≤–µ—Ä–∞
    try:
        if not test_api_server():
            all_passed = False
    except Exception as e:
        print(f"‚ùå –¢–µ—Å—Ç API —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–æ–≤–∞–ª–µ–Ω: {e}")
        all_passed = False
    
    # –¢–µ—Å—Ç GUI (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π)
    try:
        test_gui_import()
    except Exception as e:
        print(f"‚ùå –¢–µ—Å—Ç GUI –ø—Ä–æ–≤–∞–ª–µ–Ω: {e}")
        # GUI –Ω–µ –∫—Ä–∏—Ç–∏—á–µ–Ω –¥–ª—è –æ–±—â–µ–π —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
    
    print("=" * 50)
    if all_passed:
        print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("üéâ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        print("\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å GUI:")
        print("python3 start_system_with_gui.py")
        print("\n–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API:")
        print("curl http://localhost:5000/api/health")
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ")
    
    return 0 if all_passed else 1

if __name__ == "__main__":
    import sys
    sys.exit(main()) 