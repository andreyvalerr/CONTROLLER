#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π —Å–∏—Å—Ç–µ–º—ã –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∫—Ä–∏–ø—Ç–æ–∫–æ—Ç–ª–∞
–ó–∞–ø—É—Å–∫–∞–µ—Ç data_manager, get_temperature_from_asic, valve_control –∏ GUI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
"""

import os
import sys
import time
import threading
from datetime import datetime
from logs.rolling_log import start_rolling_logger, stop_rolling_logger

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è valve controller
valve_controller_instance = None

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –º–æ–¥—É–ª—è–º
current_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.append(current_dir)
sys.path.append(os.path.join(current_dir, 'data_manager'))
sys.path.append(os.path.join(current_dir, 'get_temperature_from_asic'))
sys.path.append(os.path.join(current_dir, 'valve_control'))
sys.path.append(os.path.join(current_dir, 'gui_interface'))

def start_data_manager():
    """–ó–∞–ø—É—Å–∫ data_manager core system"""
    try:
        print("[–ó–ê–ü–£–°–ö] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è data_manager...")
        from data_manager.core_system import start_core_system, is_core_system_running
        
        if not is_core_system_running():
            success = start_core_system(temperature_ip="192.168.0.127", temperature_update_interval=1.0)
            if success:
                print("‚úÖ Data Manager –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                return True
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Data Manager")
                return False
        else:
            print("‚úÖ Data Manager —É–∂–µ –∑–∞–ø—É—â–µ–Ω")
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ data_manager: {e}")
        return False

def start_valve_control():
    """–ó–∞–ø—É—Å–∫ valve_control –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    try:
        print("[–ó–ê–ü–£–°–ö] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è valve_control...")
        from valve_control.data_manager_integration import (
            start_temperature_data_provider,
            is_temperature_provider_running,
            get_temperature_for_valve_controller,
            is_temperature_settings_available,
            register_valve_controller_instance,
            initialize_mode_from_settings,
            start_mode_cooling_listener,
            stop_mode_cooling_listener
        )
        from valve_control.valve_controller import ValveController, ValveControllerConfig
        from valve_control.config import load_config_from_env
        
        # –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å data_manager
        if not is_temperature_provider_running():
            success = start_temperature_data_provider(update_interval=1.0)
            if not success:
                print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Valve Control —Å data_manager")
                return False
            print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Valve Control —Å data_manager –∑–∞–ø—É—â–µ–Ω–∞")
        else:
            print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Valve Control —Å data_manager —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
        if not is_temperature_settings_available():
            print("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è valve_control")
            return False
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
        relay_config, temp_config, monitoring_config, safety_config = load_config_from_env()
        config = ValveControllerConfig(
            relay_config=relay_config,
            temperature_config=temp_config,
            monitoring_config=monitoring_config,
            safety_config=safety_config
        )
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ valve controller
        global valve_controller_instance
        valve_controller_instance = ValveController(
            temperature_callback=get_temperature_for_valve_controller,
            config=config
        )
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∏–Ω—Å—Ç–∞–Ω—Å –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (GUI)
        register_valve_controller_instance(valve_controller_instance)
        
        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã —Å data_manager
        if not valve_controller_instance.sync_temperature_settings_with_data_manager():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã")
            return False
        
        # –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        def run_valve_controller():
            try:
                valve_controller_instance.run_forever()
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤ valve_controller: {e}")
        
        valve_thread = threading.Thread(target=run_valve_controller, daemon=True)
        valve_thread.start()

        # –§–æ–Ω–æ–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∂–∏–º–∞ –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∏ –∑–∞–ø—É—Å–∫ listener
        def apply_mode_when_ready():
            try:
                for _ in range(50):  # –¥–æ ~10 —Å–µ–∫—É–Ω–¥ –æ–∂–∏–¥–∞–Ω–∏—è
                    try:
                        if valve_controller_instance and valve_controller_instance.is_running():
                            initialize_mode_from_settings()
                            # –ó–∞–ø—É—Å–∫–∞–µ–º listener —Ä–µ–∂–∏–º–∞/–æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è
                            try:
                                start_mode_cooling_listener()
                            except Exception:
                                pass
                            return
                    except Exception:
                        pass
                    time.sleep(0.2)
            except Exception:
                pass

        threading.Thread(target=apply_mode_when_ready, daemon=True).start()
        
        print("‚úÖ Valve Controller –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ valve_control: {e}")
        return False



def start_gui():
    """–ó–∞–ø—É—Å–∫ GUI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    try:
        print("[–ó–ê–ü–£–°–ö] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è GUI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
        from gui_interface.main_gui import TemperatureControllerGUI
        
        app = TemperatureControllerGUI()
        print("‚úÖ GUI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–ø—É—â–µ–Ω")
        app.run()  # –ë–ª–æ–∫–∏—Ä—É—é—â–∏–π –≤—ã–∑–æ–≤
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ GUI: {e}")
        return False

def setup_temperature_settings():
    """–£–¥–∞–ª–µ–Ω–æ: –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –±–æ–ª—å—à–µ –Ω–µ—Ç. –û—Å—Ç–∞–≤–ª–µ–Ω–æ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç False."""
    print("‚ö†Ô∏è setup_temperature_settings() –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: —É—Å—Ç–∞–≤–∫–∏ –∑–∞–¥–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ GUI –∏ gui_settings.json")
    return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã"""
    print("=" * 50)
    print("–ö–û–ù–¢–†–û–õ–õ–ï–† –ö–†–ò–ü–¢–û–ö–û–¢–õ–ê - –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´")
    print("=" * 50)
    print(f"–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    # –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –º–æ–¥—É–ª–µ–π
    modules_started = 0
    total_modules = 4
    
    # 1. –ó–∞–ø—É—Å–∫ data_manager (–æ—Å–Ω–æ–≤–∞ —Å–∏—Å—Ç–µ–º—ã)
    if start_data_manager():
        modules_started += 1
        time.sleep(2)  # –î–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    else:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å data_manager")
        print("‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ data_manager")
        return 1
    
    # 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —É–¥–∞–ª–µ–Ω–∞ ‚Äî —É—Å—Ç–∞–≤–∫–∏ —Ç–æ–ª—å–∫–æ –∏–∑ gui_settings.json
    if True:
        pass
    
    # 3. –ó–∞–ø—É—Å–∫ valve_control
    if start_valve_control():
        modules_started += 1
        time.sleep(1)
    else:
        print("‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å valve_control")
        print("‚ö†Ô∏è –†–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
    
    print()
    print("=" * 50)
    print(f"–°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï ({modules_started}/{total_modules} –º–æ–¥—É–ª–µ–π)")
    print("=" * 50)
    print("–ú–æ–¥—É–ª–∏:")
    print("‚úÖ Data Manager        - –°–±–æ—Ä –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
    if modules_started >= 2:
        print("‚úÖ Valve Control       - –†–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã") 
    else:
        print("‚ùå Valve Control       - –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    print("üîÑ Temperature Monitor - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π")
    print("üñ•Ô∏è GUI Interface       - –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    print()
    print("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("=" * 50)
    print()
    
    # 4. –ó–∞–ø—É—Å–∫ rolling-–ª–æ–≥–≥–µ—Ä–∞ (–±—É—Ñ–µ—Ä 120 —Å–µ–∫—É–Ω–¥)
    try:
        start_rolling_logger()
        print("‚úÖ Rolling –ª–æ–≥–≥–µ—Ä –∑–∞–ø—É—â–µ–Ω (logs/rolling.log)")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å rolling –ª–æ–≥–≥–µ—Ä: {e}")
    
    # 5. –ó–∞–ø—É—Å–∫ GUI (–±–ª–æ–∫–∏—Ä—É—é—â–∏–π)
    try:
        start_gui()
    except KeyboardInterrupt:
        print("\n\n[–û–°–¢–ê–ù–û–í–ö–ê] –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è...")
    except Exception as e:
        print(f"\n\n[–û–®–ò–ë–ö–ê] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ GUI: {e}")
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
    print("\n[–û–°–¢–ê–ù–û–í–ö–ê] –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã...")
    
    try:
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ valve controller
        global valve_controller_instance
        if valve_controller_instance:
            valve_controller_instance.stop()
            print("‚úÖ Valve Controller –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except:
        pass
    
    try:
        from data_manager.core_system import stop_core_system
        stop_core_system()
        print("‚úÖ Data Manager –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except:
        pass
    
    try:
        from valve_control.data_manager_integration import stop_temperature_data_provider
        stop_temperature_data_provider()
        print("‚úÖ Valve Control –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    except:
        pass

    try:
        from valve_control.data_manager_integration import stop_mode_cooling_listener
        stop_mode_cooling_listener()
        print("‚úÖ Valve Control listener —Ä–µ–∂–∏–º–∞/–æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except:
        pass
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ rolling-–ª–æ–≥–≥–µ—Ä–∞
    try:
        stop_rolling_logger()
        print("‚úÖ Rolling –ª–æ–≥–≥–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception:
        pass
    
    print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    return 0

if __name__ == "__main__":
    try:
        exit_code = main()
        sys.exit(exit_code)
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        sys.exit(1) 